{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Modal/Modal.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/ModalImage/ModalImage.js","Services/api.js","Components/App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","onInputValue","e","target","name","value","setState","onSubmitSearchForm","preventDefault","props","onSubmitForm","this","className","SearchbarStl","searchbar","id","onSubmit","form","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","alt","largeImageURL","onImageClick","src","ImageGalleryItemStl","image","onClick","url","dataset","largeimageurl","ImageGallery","images","ImageGalleryStyle","gallery","map","item","tags","Button","text","buttonAction","ButtonStl","container","App","LoaderStl","loader","color","height","width","timeout","Modal","pressEscBtn","code","onCloseModal","window","addEventListener","removeEventListener","children","ModalStl","overlay","modal","ModalImage","largeImage","protoType","PropTypes","exact","string","isRequired","axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImage","a","keyword","page","get","q","data","hits","console","log","error","useState","setImages","setLargeImageURL","loading","setLoading","setError","setKeyword","setPage","lastPage","setLastPage","useEffect","fetchImage","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","imageApi","then","totalHits","isLastPage","catch","finally","query","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0ee968e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__HMLwE\",\"item\":\"ImageGallery_item__3kC46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__2XkuZ\",\"button\":\"Button_button__1zPwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__Z0tCU\",\"modal\":\"Modal_modal__zBn6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__e_qAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2Kbpf\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchbarStl from \"./Searchbar.module.css\";\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: \"\",\n  };\n\n  onInputValue = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitSearchForm = (e) => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n    this.props.onSubmitForm(inputValue);\n    this.setState({ inputValue: \"\" });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <header className={SearchbarStl.searchbar}>\n        <form\n          id=\"form\"\n          onSubmit={this.onSubmitSearchForm}\n          className={SearchbarStl.form}\n        >\n          <button type=\"submit\" className={SearchbarStl.button}>\n            <span className={SearchbarStl.label}>Search</span>\n          </button>\n          <input\n            className={SearchbarStl.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"inputValue\"\n            value={inputValue}\n            id=\"input\"\n            onChange={this.onInputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItemStl from \"./ImageGalleryItem.module.css\";\n\nfunction ImageGalleryItem({\n  webformatURL,\n  alt,\n  largeImageURL,\n  id,\n  onImageClick,\n}) {\n  const getlargeImageURL = (e) => {\n    onImageClick({\n      url: e.target.dataset.largeimageurl,\n      alt: e.target.alt,\n    });\n  };\n  return (\n    <img\n      src={webformatURL}\n      alt={alt}\n      className={ImageGalleryItemStl.image}\n      data-largeimageurl={largeImageURL}\n      data-id={id}\n      onClick={getlargeImageURL}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport ImageGalleryStyle from \"./ImageGallery.module.css\";\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={ImageGalleryStyle.gallery}>\n      {images.map((image) => (\n        <li key={image.id} className={ImageGalleryStyle.item}>\n          <ImageGalleryItem\n            webformatURL={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            id={image.id}\n            onImageClick={onImageClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\nimport ButtonStl from \"./Button.module.css\";\n\nfunction Button({ text, buttonAction }) {\n  return (\n    <div className={ButtonStl.container}>\n      <button type=\"button\" onClick={buttonAction} className={ButtonStl.button}>\n        {text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  buttonAction: PropTypes.func.isRequired,\n};\nexport default Button;\n","import { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport LoaderStl from \"./Loader.module.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={LoaderStl.loader}>\n        <Loader\n          type=\"Puff\"\n          color=\"#0F7A8F\"\n          height={50}\n          width={50}\n          timeout={2000}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ModalStl from \"./Modal.module.css\";\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.pressEscBtn);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.pressEscBtn);\n    this.props.onCloseModal();\n  }\n\n  pressEscBtn = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const { onCloseModal, children } = this.props;\n\n    return (\n      <div className={ModalStl.overlay} onClick={onCloseModal}>\n        <div className={ModalStl.modal}>{children}</div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ModalImage({ largeImage }) {\n  const { alt, url } = largeImage;\n  return <img src={url} alt={alt} />;\n}\n\nModalImage.protoType = {\n  largeImage: PropTypes.exact({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ModalImage;\n","import axios from \"axios\";\nconst API_KEY = \"21742684-2124d89228f195892f61b714b\";\nconst BASE_URL = \"http://pixabay.com/api\";\n\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: \"photo\",\n  orientation: \"horizontal\",\n  per_page: 12,\n};\n\nconst getImage = async (keyword = \"\", page) => {\n  try {\n    const { data } = await axios.get(\"\", {\n      params: { q: keyword, page: page },\n    });\n    return data.hits;\n  } catch (error) {\n    console.log(\"error\", { error });\n    return [];\n  }\n};\n\nexport default getImage;\n","import { useState, useEffect } from \"react\";\n\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Button from \"./Button/Button\";\nimport Loader from \"./Loader/Loader\";\nimport Modal from \"./Modal/Modal\";\nimport ModalImage from \"./ModalImage/ModalImage\";\nimport imageApi from \"../Services/api\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [keyword, setKeyword] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [lastPage, setLastPage] = useState(1);\n\n  const onSubmitForm = (query) => {\n    setKeyword(query);\n    setPage(1);\n    setImages([]);\n  };\n\n  const hideLargeImage = () => {\n    setLargeImageURL(null);\n  };\n\n  useEffect(() => {\n    if (!keyword) {\n      return;\n    }\n\n    fetchImage();\n    // eslint-disable-next-line\n  }, [keyword]);\n\n  useEffect(() => {\n    if (page > 2) {\n      scrollDown();\n    }\n  }, [page]);\n\n  const isLastPage = (data) => {\n    const perPageImages = 12;\n    const totalHits = data.totalHits - perPageImages;\n    if (totalHits <= 0) {\n      setLastPage(true);\n    } else {\n      setLastPage(false);\n    }\n  };\n\n  const scrollDown = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  function fetchImage() {\n    setLoading(true);\n    imageApi(keyword, page)\n      .then((data) => {\n        setImages((images) => [...images, ...data]);\n        setPage((page) => page + 1);\n        isLastPage(data);\n      })\n      .catch((error) => setError(error))\n      .finally(() => setLoading(false));\n  }\n  return (\n    <>\n      <Searchbar onSubmitForm={onSubmitForm} />\n      {images.length > 0 && (\n        <ImageGallery images={images} onImageClick={setLargeImageURL} />\n      )}\n      {largeImageURL && (\n        <Modal onCloseModal={hideLargeImage}>\n          <ModalImage largeImage={largeImageURL} />\n        </Modal>\n      )}\n      {images.length > 0 && !lastPage && !loading && (\n        <Button text=\"Load more\" buttonAction={fetchImage} />\n      )}\n      {loading && <Loader />}\n      {error && <p>ERROR</p>}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3BzVO\",\"form\":\"Searchbar_form__5gzvJ\",\"button\":\"Searchbar_button__1izDO\",\"label\":\"Searchbar_label__18elz\",\"input\":\"Searchbar_input__1i4FD\"};"],"sourceRoot":""}